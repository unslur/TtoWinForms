<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="skinCode1.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAASVSURBVHhe7ZjLcdswEIZVSnpwC1IFSQVpQB53kQLscSfW
        jPvw6OAyMj7kwnBBgVyAP0gAxGNp4fCNRnhxF/iBXeDw999X12g0ITQUTQgNRRNCQyFLCJ8v3fH00n2g
        ukZW5Ajh/bE7HA4DTxfcppENEUL4eD1OImhiqEJ1ISARHF+vsG0jH1WF8PZkCoA4v+O2RelzlfOdibGS
        EK7d80moCHrsU+oeTqgKQkAiOHbPn6htDbBINcFipSR4B/lOYSFcuvNsch+7N9i2EnSFndmI8LBbj9WE
        wIATLEwEPUZYuL1pwFuNZuHdY8yBdvA2UkYIzl0mKSQQZlhAuQFKcAkUMkYBNSH08IciSCYx6O+GHMuG
        YFfsAn7ZYmhCuAGP1NMxW4igsSgPMcf2z/pRWEDtJuzE0hLPKBZ5IVBD9qlfuyIVSATjgqBQsXHXGGM5
        QP0m1sOCCyNccD92IgQFqtyK10MRChmRYpiNswDqrwgJCzauvmN5pvC3ET4viYWA7+CuuzcMHQEx3e67
        tOvstnZ9eFjgOE4T4ULQKLtRRSzzhV2fgFgx2H18j3LeZyqPDwuUkzz37Q0/Rvund5Pgh6jCpA8NEXER
        hZKlxeDthgUI23G8vyqLDgtMQKeHccxJCFP9/QmBeL8EJ0deeUWP3WYQQlgyhse4/Q8KC+iltAcIIZZS
        AsojhCjwpPGJsOuoLOZEUKBktSd84oHdLLS5HqB8CAtR2xAkBALtsGGReZnR57agwQsIhRB7zbt25x/m
        WNoeLQTnohphieGRJ6VEmBAIx3HLgO37I90sX0afJMtje+JYTFr8MewUXthQBAqhx7VLelB7Pdkhp8Kw
        U391Pz3GX8PIMR7m4lI0IUTiEIMrkdNHsJcYbmMfn37PxidgHyfmCaZCALI98rGsFHKFQAS+Pg5J23ri
        OLR77P44EjnUx4VxGhjftpNIuc/MhGghTJNosXDM6smHydm4U2nBzJ1MJ8k4fs+sL8Le+cAu89YQcbsp
        hFghTJNn3fM1C2KA7TW63+y0GXYsL7PHNbGTWvci2/aUvBb6IlIIfNIIKkP38fgJ9X/owf3nN5tVW2zh
        CUsexQuBl6cVAzFf0Ch8F9UOJYISSHFC4BM8rzd3ctojNk4U4Tbo78jKF0QJgU8wqh8YJjL4JTEEdP2z
        2bSbr92HsKRRCYEcsytqwCca1ZdGmj056X2U4ai2Q4ItGok25WI8EWo6yye8ph0IqXalxhBCLWdrf38N
        6falYEwWazm6l0neg41bmAmhpMM1vhnLXuyMZRSC+lPYWf69Ut/cwp5sDcUphBLOlvpOSvZosw+GEFTB
        zdHcDpf4Ri72avcSMyGowsyLlHv83OzdfsSqEFI7m2vcknAf9uwHBwqByOFs6vFq8p18IZxCILizWx1O
        OZYUUvuUapwYFoVAcEdjjUwxhlRS+MXH2DLOFlaFQGwx1O4b2n8PbPVvS99UeAmB4Mb6Gmz38e23R2L9
        jO2XGm8hECFGh7T9Ltg+L/nt264UQUIgbAd8QON8V7jPfA5c2P1rESwEAjljl+nyewTNg12my2Xw1f0H
        w08i89uibS4AAAAASUVORK5CYII=
</value>
  </data>
</root>